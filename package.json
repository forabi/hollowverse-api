{
  "name": "hollowverse-api",
  "version": "1.0.0",
  "private": true,
  "description": "GraphQL API for Hollowverse",
  "repository": "https://github.com/hollowverse/api.git",
  "scripts": {
    "pretest": "run-p generate-graphql-types",
    "test": "run-p validate-schema validate-filenames lint-js lint-ts",
    "validate-schema": "graphql-validator -s './schema.graphql' './src/examples/*.graphql'",
    "check-ts": "tsc --project ./src --noEmit",
    "lint-js": "eslint '**/*.js{,x}'",
    "lint-ts": "tslint './*.ts' 'src/**/*.ts{,x}' -e 'src/typings/schema.ts' -e 'src/database/migrations/*.ts' --project tsconfig.json",
    "introspect-schema": "apollo-codegen introspect-schema schema.graphql --output schema.json",
    "generate-types-from-template": "gql-gen --file ./schema.json --project src/typings",
    "generate-graphql-types": "run-s --aggregate-output introspect-schema generate-types-from-template",
    "generate-graphql-types/dev": "nodemon -q --watch schema.graphql --exec 'run-p generate-graphql-types'",
    "server/dev": "PORT=${API_PORT:-8080} nodemon -q --watch ./src --ext ts,graphql,tsx,json --exec 'node --inspect=0.0.0.0:${API_DEBUG_PORT:-9229} -r 'ts-node/register' src/server.ts'",
    "dev": "npm-run-all -s --aggregate-output generate-graphql-types -p '*/dev'",
    "database/mock": "ts-node src/scripts/insertMockData.ts --project ./src",
    "build": "tsc --project ./src",
    "clean": "rm -rf ./dist",
    "start": "node dist/server.js",
    "validate-filenames": "validate-filenames --config commonconfig.js",
    "lint-staged": "lint-staged"
  },
  "license": "Unlicense",
  "homepage": "https://github.com/hollowverse/api#readme",
  "lint-staged": {
    "**/*.{j,t}s{x,}": [
      "prettier --write",
      "git add"
    ],
    "**/*.{graphql,gql}": [
      "validate-schema",
      "prettier --write",
      "git add"
    ],
    "**/*.js{x,}": [
      "eslint"
    ]
  },
  "pre-commit": [
    "validate-filenames",
    "lint-staged"
  ],
  "dependencies": {
    "@hollowverse/common": "hollowverse/common",
    "apollo-server-express": "^1.1.2",
    "body-parser": "^1.18.2",
    "class-sanitizer": "^0.0.5",
    "class-validator": "^0.7.2",
    "cors": "^2.8.4",
    "dataloader": "^1.3.0",
    "express": "^4.15.2",
    "got": "^7.1.0",
    "graphql": "^0.11.7",
    "graphql-iso-date": "^3.3.0",
    "graphql-playground-middleware-express": "^1.3.6",
    "graphql-tools": "^1.2.3",
    "helmet": "^3.9.0",
    "moment": "^2.19.2",
    "mysql": "^2.14.1",
    "npm-run-all": "^4.0.2",
    "reflect-metadata": "^0.1.10",
    "typeorm": "^0.1.7",
    "validator": "^9.0.0"
  },
  "devDependencies": {
    "@creditkarma/graphql-loader": "^0.6.6",
    "@creditkarma/graphql-validator": "^0.5.0",
    "@hollowverse/validate-filenames": "^1.3.3",
    "@playlyfe/gql": "^2.3.2",
    "@types/body-parser": "^1.16.5",
    "@types/cors": "^2.8.3",
    "@types/express": "^4.0.36",
    "@types/faker": "^4.1.2",
    "@types/got": "^7.1.4",
    "@types/helmet": "^0.0.37",
    "@types/lodash": "^4.14.74",
    "@types/node": "^8.0.8",
    "@types/shelljs": "^0.7.4",
    "@types/uuid": "^3.4.2",
    "@types/validator": "^6.3.0",
    "babel-eslint": "^8.0.2",
    "eslint": "^4.11.0",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-config-prettier": "^2.3.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-react": "^7.3.0",
    "faker": "^4.1.0",
    "graphql-code-generator": "^0.8.14",
    "graphql-to-typescript": "^0.1.2",
    "lint-staged": "^4.0.3",
    "lodash": "^4.17.4",
    "nodemon": "^1.11.0",
    "pre-commit": "^1.2.2",
    "prettier": "^1.5.3",
    "shelljs": "^0.7.8",
    "stylelint": "^8.2.0",
    "stylelint-config-standard": "^17.0.0",
    "stylelint-no-unsupported-browser-features": "^1.0.0",
    "ts-node": "^3.2.0",
    "tslint": "^5.7.0",
    "tslint-config-prettier": "^1.3.0",
    "tslint-eslint-rules": "^4.1.1",
    "tslint-microsoft-contrib": "^5.0.1",
    "tslint-react": "^3.2.0",
    "typescript": "^2.5.2",
    "uuid": "^3.1.0"
  },
  "engines": {
    "node": ">= 9.2"
  }
}
